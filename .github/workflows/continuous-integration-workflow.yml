name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build code
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code
    - name: Set up .NET
      uses: xt0rted/setup-dotnet@v1.0.0
      with:
        dotnet-version: 6.0.201
    - uses: actions/setup-node@v3
    - run: dotnet build
    - name: install and build npm
      working-directory: ./DotnetTemplate.Web
      run: |
        npm install
        npm run build
    - name: run c# tests
      run: dotnet test
    - name: run TypeScript tests
      working-directory: ./DotnetTemplate.Web
      run: npm t
    - name: run linting
      working-directory: ./DotnetTemplate.Web
      run: npm run lint
    - name: Slack Notification
      uses: tokorom/action-slack-incoming-webhook@main
      env:
        INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: success()
      with:
        text: Successfully automated deployment.
        attachments: |
          [
            {
              "color": "good",
              "author_name": "${{ github.actor }}",
              "author_icon": "${{ github.event.sender.avatar_url }}",
              "fields": [
                {
                  "title": "Commit Message",
                  "value": "${{ github.event.head_commit.message }}"
                },
                {
                  "title": "GitHub Actions URL",
                  "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                },
                {
                  "title": "Compare URL",
                  "value": "${{ github.event.compare }}"
                }
              ]
            }
          ]
  build-and-push-image:
    needs: build
    name: Build Spring Boot
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Code
        uses: actions/checkout@v1
        id: git_checkout

      - name: Set up JDK 12.0
        uses: actions/setup-java@v1
        with:
          java-version: 12.0

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker Image
        id: buildAndPushImage
        uses: abhishek-070/docker-image-build-push-action@v1.0
        with:
          registry_url: 'docker.io'
          repository_name: 'dotnettemplate'
          user_name: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image_version: 'v1.0'
          docker_file: '.'
      - name: Get pre step result output image_pull_url
        run: echo "The time was ${{ steps.buildAndPushImage.outputs.image_pull_url }}"